name: Run Training Pipeline

on:
  workflow_dispatch:
  repository_dispatch:
    types:
      - continuous-training
  
permissions:
  id-token: write
  contents: read
    
jobs:
  integration:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Lint code
        run: echo "Linting repository"

      - name: Run unit tests
        run: echo "Running unit tests"

  start-runner:
    name: Continuous Delivery
    needs: integration
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Start EC2 runner
        id: start-ec2-runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: start
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          ec2-image-id: ${{ secrets.EC2_AMI_ID }}
          ec2-instance-type: ${{ secrets.EC2_INSTANCE_TYPE }}
          subnet-id: ${{ secrets.EC2_SUBNET_ID }}
          security-group-id: ${{ secrets.EC2_SG_ID }}

    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}   
          
  run-training:
    name: Continuous Training
    needs: start-runner
    runs-on: ${{ needs.start-runner.outputs.label }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run the start up script
        run: |
          bash scripts/start_up.sh

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Install the requirements 
        run: |
          pip3 install -r requirements.txt 

      - name: Move bentoml binaries to PATH
        run: |
          sudo mv /home/ubuntu/.local/bin/* /usr/bin

      - name: Run the training pipeline code
        run: |
          python3 train.py

  post-train:
    name: Post Training Clean Up
    needs:
      - run-training
      - start-runner
    runs-on: ubuntu-latest
    steps:
      - name: Stop EC2 instance
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
        run: | 
          aws ec2 stop-instances --instance-ids ${{ secrets.EC2_INSTANCE_ID }}

      - name: Wait for EC2 instance to be stopped
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
        run: | 
          aws ec2 wait instance-stopped --instance-ids ${{ secrets.EC2_INSTANCE_ID }}